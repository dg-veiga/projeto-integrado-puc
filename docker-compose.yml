version: '3.7'

services:
  projint-moto:
    container_name: projint-moto
    image: motoserver/moto
    environment:
      AWS_ACCESS_KEY_ID: testing
      AWS_SECRET_ACCESS_KEY: testing
      AWS_SESSION_TOKEN: testing
      AWS_DEFAULT_REGION: us-east-1
    restart: unless-stopped
    ports:
      - 5000:5000
    networks:
      - default

  projint-db:
    depends_on:
      - projint-moto
    container_name: projint-db
    image: postgres:12-alpine
    volumes:
      - projint-db:/var/lib/postgresql/data
    environment:
      - "POSTGRES_DB=projint"
      - "POSTGRES_USER=admin"
      - "POSTGRES_PASSWORD=@dmin123"
    restart: unless-stopped
    ports:
      - 6432:5432
    network_mode: "host"

  projint-backend:
    depends_on:
      - projint-moto
      - projint-db
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    image: projint-backend:latest
    container_name: projint-backend
    restart: unless-stopped
    volumes:
      - projint-media:/var/www/projint-backend/media
    ports:
      - 8000:8000
    network_mode: "host"

  projint-frontend:
    depends_on:
      - projint-backend
    build:
      context: frontend
      dockerfile: Dockerfile
    image: projint-frontend:latest
    command: npm run start
    container_name: projint-frontend
    restart: unless-stopped
    network_mode: "host"

  proxy:
    depends_on:
      - projint-backend
      - projint-frontend
    build:
      context: proxy
      dockerfile: Dockerfile
    image: proxy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - "DOMAIN=localhost"
    container_name: proxy
    network_mode: "host"

volumes:
  projint-db:
  projint-media: